(defun test-foo-mode ()
  (interactive))
(defun test-bar-mode ()
  (interactive))
(defun test-baz-mode ()
  (interactive))

(ert-deftest counsel-minor-test-candidates ()
  (let* ((baz-mode-lighter " Baz")
         (minor-mode-list '(test-foo-mode test-bar-mode test-baz-mode))
         (minor-mode-alist '((test-foo-mode " Foo") (test-baz-mode baz-mode-lighter))))

    (let ((test-foo-mode t) (test-bar-mode t) (test-baz-mode t))
      (should (equal (counsel--minor-candidates)
                     '(("-test-foo-mode \" Foo\"" . test-foo-mode)
                       ("-test-bar-mode" . test-bar-mode)
                       ("-test-baz-mode \" Baz\"" . test-baz-mode)))))

    (let (test-foo-mode (test-bar-mode t) test-baz-mode)
      (should (equal (counsel--minor-candidates)
                     '(("+test-foo-mode \" Foo\"" . test-foo-mode)
                       ("-test-bar-mode" . test-bar-mode)
                       ("+test-baz-mode \" Baz\"" . test-baz-mode)))))

    (let (test-foo-mode test-bar-mode test-baz-mode)
      (should (equal (counsel--minor-candidates)
                     '(("+test-foo-mode \" Foo\"" . test-foo-mode)
                       ("+test-bar-mode" . test-bar-mode)
                       ("+test-baz-mode \" Baz\"" . test-baz-mode)))))))
